[[{"l":"Overview","p":["Welcome to the official documentation of the Conductive Catalyst SDK \uD83D\uDC4B.","The goal of this document is to provide a brief overview of how to get started with Conductive.ai's SDK."]},{"i":"what-is-catalyst","l":"What is Catalyst?","p":["The core mission of Conductive.ai is to provide game developers with a simple yet effective rewards system that increases player engagement and consequently, user lifetime value (LTV). We do this by providing a simple drop-in SDK with minimal configuration, presenting players with a lucrative engagement framework."]},{"i":"how-does-it-work","l":"How does it work?","p":["At present, we provide a Unity SDK (any native iOS and Android SDK upon request). Integration involves oneline of code, with no changes necessary to your existing code. Players are highly incentivized to perform actions directly correlated with engagement, retention, and monetization increasing your overall LTV over time."]}],[{"l":"Glossary","p":["1 or more qualifying conditions that make a User eligible for a Reward","A client for the Catalyst platform","A client user references a client user of the game or application","A company or group with one or more Projects","A consumer of a service","A developer may set an expiry for the Rewards offered to Users to motivate actions","A pub-sub consumer","A pub-sub event creator","A reward pool a User may be eligible for based on requirements","A single application or game which has a unique API key","A smaller supporting service, typically at the application level, but not the core level of Conductive.ai’s platorm","A supporting major service within Conductive.ai’s core platform","A test or production blockchain network","A type of transaction related to a Reward, not to be confused with Withdrawal","A Web2 or Web3 reward which incentivizes a user to perform a given action","Admin / Client / Developer","An address / account controlled by a User has outside of Conductive.ai’s platform","An arbitrary ordinal rank of a user based on a game developer’s requirements","An arbitrary Web3 asset on a given test or production blockchain network","An async or synchronous event related to the Catalyst application","An identified User that is verified","An indentifier used to represent a “real” User (a Person)","An on-chain valid transaction on an EVM compatible chain","Balance","Catalyst","Catalyst Event","Chain","Client","Conductive Core","Conductive.ai’s core Web2 and Web3 platform upon which Catalyst sits","Consumer","Contest","Definition","External User ID","External Wallet","Fingerprint","Gas","Gas Fee","Leaderboard","Microservice","Organization","Person","Producer","Project","Reward","Reward Expiration","Reward Group","Reward Transaction","SDK","Service","Term","The accummulation of a Reward earned by a User","The action of off-ramping a Catalyst game asset to an external wallet","The cost per unit of gas required to successfully complete an on-chain transaction; also called the gas price","The developer account within Conductive.ai’s Catalyst platform","The developer’s identifier for a User, enables Conductive.ai to sync identities","The following is a non-exhaustive list of technical terms used by Conductive.ai that may be referenced throughout this document.","The minimum balance of a currency or token a User must have before off-ramping their assets","The rewards application and SDK that is built on top of the Conductive Core platform","The units of a native blockchain token required to successfully complete an on-chain transaction","Token","Transaction","User","Withdrawal","Withdrawal threshold"]}],[{"l":"Getting Started","p":["If you want to integrate CatalystSDK into your Unity game development project, this step-by-step guide will help you install the package into Unity."]},{"l":"Installation Guide","p":["You can follow our quick installation guide in our public Github repository, or continue following the instructions below."]},{"l":"Requirements","p":["Unity 2018 or later installed on your computer","An internet connection","A GitHub account"]},{"l":"API Key","p":["You will first want to acquire an API key by visiting the dashboard https://app.conductive.ai and selecting the settings icon at the bottom, followed by “Settings”.","This should take you to the project settings below. Copy your API key provided for your project."]},{"l":"Installing the Unity SDK","p":["In Unity, go to Window > Package Manager. You can install the SDK using either the GitHub URL or the ZIP file.","Using GitHub:","Click the ➕ button, then go to Add package from git URL.","Paste https://github.com/conductiveai/catalyst-unity-sdk.git and click Add.","Using the ZIP file:","Go to https://github.com/conductiveai/catalyst-unity-sdk and download the zip file","Unzip the file","Click the ➕ button, then go to Add package from disk.","Select the folder that you unzipped select the package.json file."]},{"l":"Integration in Unity","p":["In the packages list, go to Packages > CatalystSDK > Prefab","Drag the CatalystSDK.prefab to your project's loading scene or first scene","Fill in the API_KEY field in the CatalystSDK.prefab using the API key you acquired earlier."]},{"i":"that-s-it","l":"That’s it! \uD83D\uDE80","p":["The Catalyst SDK will automatically capture user login events automatically.","No additional code is required! Placing the prefab in the game's first loaded scene or Main Menu ensures user logins are captured when the game starts."]}],[{"l":"Catalyst Account Setup","p":["Setting up your account is easy, we’re also happy to help you get it done. Just contact someone from our team, and we’ll assist you as soon as possible.","Sign up for an account with us and log into the dashboard located at https://app.conductive.ai","A project will automatically be set up for you; just simply retrieve your API key."]},{"l":"API Key","p":["You will first want to acquire an API key by visiting the dashboard https://app.conductive.ai and selecting the settings icon at the bottom and then “Settings”.","This should take you to the project settings below. Copy the API key provided for your project.","Now that you have your API key, you can continue to install the SDK remotely or locally.","Continue to the Unity SDK section."]}],[{"l":"Unity SDK","p":["The Conductive Catalyst SDK is primarily provided to game developers as a Unity SDK. We also support native Android (Kotlin) and iOS (Swift) SDKs upon request.","We’ve made it extremely easy to get started with the SDK. Simply follow the steps below to get started."]},{"l":"SDK Installation"},{"l":"Installation Guide","p":["You can follow our quick installation guide in our public Github repository, or continue following the instructions below."]},{"l":"Requirements","p":["Unity 2018 or later installed on your computer","An internet connection","A GitHub account"]},{"l":"API Key","p":["You will first want to acquire an API key by visiting the dashboard https://app.conductive.ai and selecting the settings icon, followed by “Settings”","This should take you to the project settings below. Copy your API key provided for your project."]},{"l":"Installing the Unity SDK","p":["In Unity, go to Window > Package Manager. You can install the SDK using either the GitHub URL or the ZIP file.","Using GitHub:","Click the ➕ button, then go to Add package from git URL.","Paste https://github.com/conductiveai/catalyst-unity-sdk.git and click Add.","Using the ZIP file:","Go to https://github.com/conductiveai/catalyst-unity-sdk and download the zip file","Unzip the file","Click the ➕ button, then go to Add package from disk.","Select the folder that you unzipped select the package.json file."]},{"l":"Integration in Unity","p":["In the packages list, go to Packages > CatalystSDK > Prefab.","Drag the CatalystSDK.prefab to your project's loading scene or first scene","Fill in the API_KEY field in the CatalystSDK.prefab using the API key you acquired earlier."]},{"i":"that-s-it","l":"That’s it! \uD83D\uDE80","p":["The Catalyst SDK will automatically capture user login events automatically.","No additional code is required! Placing the prefab in the game's first loaded scene or Main Menu ensures user logins are captured when the game starts."]}],[{"l":"Sending Events in Catalyst","p":["By default, adding your API_KEY will automatically send a registration event to Catalyst’s backend and record when users have logged into your application.","In order to effectively use the features of Catalyst, it is important to identify your users using CatalystSDK.identify() and label them using your own internal user ID. This will be vital when integrating additional features."]},{"l":"Identify","p":["You can identify a user with your application or game's unique internal ID instead of with Catalyst. If not provided, Catalyst will generate a random but unique identifier. If this method is never called, then unique visitors will be identified by a randomly generated UUID generated the first time they launch your application.","Ideally, you should only capture this once. For example, once a user successfully registers and verifies their email address, you can fire this event once.","If you can’t avoid firing this frequently (like at app cold launch), don't worry — we'll still track the user for you."]},{"l":"Custom Capture","p":["Captures a custom event. This Catalyst function allows you to capture additional events in the game. You do not need to use this to capture daily logins, as we will do this for you.","At a high level, this is useful if you wish to build user funnels and understand the effectiveness of a feature. Parameters are provided if you wish to capture additional metadata about the event.","Suggestions on how to use this:","When a user engages with the feature like PLAY_LEVEL","When a user achieves a result like WIN_LEVEL","Parameters could include the level played, XP earned, etc.","When a user attempts to make a purchase and when the purchase is successful","In general, it is important to capture key events around Monetization and Engagement using the Capture method. The PageView method will help you capture retention metrics/KPIs. This will ultimately be useful for tracking user lifetime value (LTV)."]},{"l":"Alias","p":["Create an alias, which Catalyst will use to link two user IDs going forward (not retroactively). Multiple aliases can map to the same USER_UNIQUE_ID, but not vice-versa.","The context for using this is if your user has multiple identifiers you wish to leverage later for analytics or Catalyst feature purposes. For example, once you’ve used the Identify() method, you might later might capture a user’s Twitter handle. If you wish to track this later, simply provide their unique user ID you used for Identify() as the first parameter, followed by the secondary identifier in the second parameter.","Like Identify(), this only needs to be fired once."]},{"l":"ScreenView","p":["This method is used to track when the user views a specific screen in your game. You can pass additional properties you wish to use later.","Tracking screens is incredibly beneficial as it enables us to monitor both user retention and LTV effectively."]}],[{"l":"Event example"},{"l":"Manually capturing events","p":["Here's an example code snippet that shows how to use the CatalystSDK in your game's code"]}],[{"l":"Mac M1"},{"i":"building-for-ios--xcode","l":"Building for iOS / XCode","p":["If you receive a CocoaPods error such as: ...ruby/2.6.0/gems/ffi-1.15.5/lib/ffi_c.bundle' (mach-o file, but is an incompatible architecture (have 'arm64', need 'x86_64')), This means you have ffi built for arm64 but not x86_64 architecture. Make sure you have Developer Mode enabled on your iOS device: Settings → Privacy → Developer mode → on Then, do the following:","(1) Install llvm:","(2) Uninstall ffi:","(3) If prompted, uninstall ALL versions. install ffi gem for x86_64:","Reference: https://stackoverflow.com/questions/66644365/cocoapods-on-m1-apple-silicon-fails-with-ffi-wrong-architecture"]},{"l":"Issues building for iOS","p":["Be sure to disable bitcode","Be sure to remove Quoted Include in Framework Header to no"]}],[{"l":"Changelog","p":["All notable changes to this project will be documented in this file. It will follow semantic versioning and each sprint should be tagged with a release. Each developer is in charge of updating this doc before the release."]},{"i":"100--2023-05-15","l":"1.0.0 — 2023-05-15"},{"l":"Added","p":["Event tracking","User identification and properties","Data persistence"]}]]