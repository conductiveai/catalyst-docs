[[{"l":"Overview","p":["Welcome to the official documentation of the Conductive Catalyst SDK \uD83D\uDC4B.","The goal of this document is to provide a brief overview on how to get started with our SDK."]},{"l":"What is Catalyst","p":["The core mission of Conductive is to provide game developers a simple yet effective rewards system that increases player engagement and consequently, LTV. We do this by providing a simple drop-in SDK with minimal configuration, presenting players with a lucrative engagement framework."]},{"l":"How it works","p":["At present we provide a Unity SDK (any native iOS and Android SDK if you ask). Integration is literally a one-line and no changes necessary to existing code. It simply just works. Players are highly incentivized to perform actions directly correlated with engagement, retention and monetization increasing your overall LTV over time."]}],[{"l":"Glossary","p":["A chain represents a test or production blockchain network","A client represents a consumer of a service","A contest represents a reward pool a User may be eligible for based on requirements","A leaderboard is an arbitrary ordinal rank of a user based on a game developers requirements","A microservice represents a smaller supporting service, typically at the application level and not the core level of the Conductive Platorm","A person is an identified User that is proven to be verified","A project references a single application or game which has a unique API key","A pub-sub consumer","A pub-sub event creator","A reward group represents 1 or more qualifying condition in which a User is eligible for a Reward","A reward represents a web2 or web3 reward which incentivizes a user to perform a given action","A service represents a supporting major service within Conductive’s core platform","A token represents an arbitrary web3 asset on a given test or production blockchain network","A transaction is an on-chain valid transaction on an EVM compatible chain","A user may earn rewards and a developer may set an expiry for the rewards to bias a user to action","A user references a client user of the game or application","Admin / Client / Developer","An async or synchronous event related to the Catalyst application","An external user ID is the developer’s identifier for the User used by Conductive to sync identities","An external wallet is an address / account a user has outside of Conductive’s platform","Balance","Balance is the accummulation of a Reward a User has earned","Catalyst","Catalyst event","Catalyst is the rewards application and SDK that is built on top of the Conductive Core platform","Chain","Client","Conductive Core","Consumer","Contest","Definition","External User ID","External Wallet","Fingerprint","Fingerprint is an indentifier used to represent a “real” User (Person)","Gas","Gas fee","Gas fee or “Gas price” represents the cost per unit of gas ostensibly required to successfully complete an on-chain transaction","Gas represents the units of a native blockchain coin ostensibly required to successfully complete an on-chain transaction","Leaderboard","Microservice","Organization","Organization references a company or group with one or more Projects","Person","Producer","Project","Represents a type of transaction derived from being eligible for a reward, not to be confused with Withdrawal","Reward","Reward expiration","Reward Group","Reward transaction","SDK","SDK represents a client for the Catalyst platform","Service","Term","The following is a non-exhaustive list of technical terms used by the Catalyst platform that may or may not be references throughout the document.","This references our core web2 and web3 platform upon which Catalyst sits","This references the developer account within Conductive’s platform Catalyst","This represent the minimum balance of a currency or token a User must have before off-ramping their assets","This represents the action of off-ramping a Catalyst game asset to an external wallet","Token","Transaction","User","Withdrawal","Withdrawal threshold"]}],[{"l":"Getting started","p":["If you want to integrate ConductiveUnitySDK into your Unity game development project, this step-by-step guide will help you install the package into Unity."]},{"l":"Installation Guide","p":["You can follow our quick installation guide in our public Github repository, or continue following the instructions below."]},{"l":"Requirements","p":["Unity 2018 or later installed on your computer","Internet connection","GitHub account"]},{"l":"API Key","p":["You will first want to acquire an API key by visiting the dashboard https://app.conductive.ai and selecting the settings icon at the bottom and then “Settings”","This should take you to the project settings below, copy your API key provided for your project."]},{"l":"Installing the Unity SDK","p":["In Unity, go to Window > Package Manager","Using the GitHub:","In the ➕ button, go to Add package from git URL","And paste https://github.com/conductiveai/conductive-unity-sdk.git and click Add","Using the ZIP file:","Go to https://github.com/conductiveai/conductive-unity-sdk and download the zip file","In the ➕ button, go to Add package from disk","Select the zip file, that you download from GitHub."]},{"l":"Integration in Unity","p":["In packages list, go to go to Packages > ConductiveUnitySdk > Prefab","Drag ConductiveSDK prefab to your project's loading scene or first scene","Fill in the API_KEY field in the ConductiveSDK prefab using the api key you acquired earlier."]},{"i":"that-s-it","l":"That’s it! \uD83D\uDE80","p":["The Conductive SDK will capture user login events automatically.","No additional code needed! Placing the prefab in the game's first loaded scene or Main Menu ensures user logins are captured when the game starts."]}],[{"l":"Catalyst Account setup","p":["Setting up your account is easy, we’re also happy to help you get it done. Just contact someone from our team and we’ll get you going ASAP.","Sign up for an account with us and log into the dashboard located at https://app.conductive.ai","A project will automatically be setup for you, just simply retrieve your API key"]},{"l":"API Key","p":["You will first want to acquire an API key by visiting the dashboard https://app.conductive.ai and selecting the settings icon at the bottom and then “Settings”","This should take you to the project settings below, copy your API key provided for your project.","Now that you have your API key, you can continue to installing the SDK remotely or locally.","Continue to Unity SDK section."]}],[{"l":"Unity SDK","p":["The Conductive Catalyst SDK is primarily provided to game developers as a Unity SDK. We also support native Android (Kotlin) and iOS (Swift) SDKs upon request.","We’ve made it insanely easy to get started with the SDK. Simply follow the steps to get started."]},{"l":"SDK Installation"},{"l":"Installation Guide","p":["You can follow our quick installation guide in our public Github repository, or continue following the instructions below."]},{"l":"Requirements","p":["Unity 2018 or later installed on your computer","Internet connection","GitHub account"]},{"l":"API Key","p":["You will first want to acquire an API key by visiting the dashboard https://app.conductive.ai and selecting the settings icon at the bottom and then “Settings”","This should take you to the project settings below, copy your API key provided for your project."]},{"l":"Installing the Unity SDK","p":["In Unity, go to Window > Package Manager","Using the GitHub:","In the ➕ button, go to Add package from git URL","And paste https://github.com/conductiveai/conductive-unity-sdk.git and click Add","Using the ZIP file:","Go to https://github.com/conductiveai/conductive-unity-sdk and download the zip file","In the ➕ button, go to Add package from disk","Select the zip file, that you download from GitHub."]},{"l":"Integration in Unity","p":["In packages list, go to go to Packages > ConductiveUnitySdk > Prefab","Drag ConductiveSDK prefab to your project's loading scene or first scene","Fill in the API_KEY field in the ConductiveSDK prefab using the api key you acquired earlier."]},{"i":"that-s-it","l":"That’s it! \uD83D\uDE80","p":["The Conductive SDK will capture user login events automatically.","No additional code needed! Placing the prefab in the game's first loaded scene or Main Menu ensures user logins are captured when the game starts."]}],[{"l":"Sending events","p":["By default, adding your API_KEY will automatically send a registration event to Catalyst’s backend so we know you use exists and logged into your application."]},{"l":"Identify","p":["Identify a user with your application/games unique internal ID instead of a Catalyst. If not provided, Catalyst will generate a random but unique identifier. If this method is never called, then unique visitors will be identified by a randomly generated UUID generated the first time they launch your application.","Ideally, you should only capture this once. For example, once a user successfully registered and verifies their email address, you can fire this event once.","If you can’t avoid firing this frequently (like at app cold launch), then it is ok. We will still track the user for you."]},{"l":"Custom Capture","p":["Captures a custom event. This Catalyst function allows you to capture additional events in the game. You do not need to use Capture to capture daily logins as we will do this for you.","At a high-level, this is useful if you wish to build user funnels and understand the effectiveness of a feature. Parameters are provided if you wish to capture additional metadata about the event.","Suggestions on how to use this:","When a user engages with the feature like PLAY_LEVEL","When a user achieves a result like WIN_LEVEL","Parameters could include the level played, XP earned, etc.","When a user attempts to make a purchase and when the purchase is successful","In general it is important to capture key events around Monetization and Engagement using the Capture method. The PageView method will help you capture Retention metrics/KPIs. This will be ultimately useful for tracking LTV."]},{"l":"Alias","p":["Create an alias, which Catalyst will use to link two user ID’s going forward (not retroactively). Multiple aliases can map to the same USER_UNIQUE_ID, but not vice-versa.","The context for using this is if you user has multiple identifiers you wish to leverage later for analytics or Catalyst feature purposes. For example, once you’ve used the Identify() method, you later might capture a user’s Twitter handle. If you wish to track this later, simply provide their unique user ID you used for Identify() as the first parameter, and the secondary identifier in the second parameter.","Like Identify(), this only needs to be fired once."]},{"l":"ScreenView","p":["This method to track when the user views a specific screen in your game. You can pass additional properties you wish to use later.","It is extremely helpful to track screens because it allows us to track user retention for you as well as user LTV."]}],[{"l":"Events example"},{"l":"Manually capturing events","p":["Here's an example code snippet that shows how to use the CatalystSDK in your game code"]}],[{"l":"Troubleshooting the SDK"},{"l":"Mac M1"},{"i":"building-for-ios--xcode","l":"Building for iOS / XCode","p":["If you’re receiving a CocoaPods error e.g. ...ruby/2.6.0/gems/ffi-1.15.5/lib/ffi_c.bundle' (mach-o file, but is an incompatible architecture (have 'arm64', need 'x86_64')),","This means you have ffi built for arm64 but not x86_64 architecture","Make sure you have Developer Mode enabled on your iOS device, Settings → Privacy → Developer mode → on","Do the following:","`# install llvm arch -arm64 brew install llvm export LDFLAGS=\"-L/opt/homebrew/opt/llvm/lib\" export CPPFLAGS=\"-I/opt/homebrew/opt/llvm/include\""]},{"l":"uninstall ffi","p":["sudo gem uninstall ffi"]},{"i":"if-prompted-uninstall-all-versions","l":"if prompted, uninstall ALL versions"},{"l":"install ffi gem for x86_64","p":["sudo arch -x86_64 gem install ffi`","Reference: https://stackoverflow.com/questions/66644365/cocoapods-on-m1-apple-silicon-fails-with-ffi-wrong-architecture"]},{"l":"Trouble building for iOS","p":["Be sure to disable bitcode","Be sure to remove Quoted Include in Framework Header to no"]}],[{"l":"Changelog","p":["All notable changes to this project will be documented in this file. It will follow semantic versioning and each sprint should be tagged with a release. Each developer is in charge of updating this doc before the release."]},{"i":"100---2023-05-15","l":"1.0.0 - 2023-05-15"},{"l":"Added","p":["Event tracking","User identification and properties","Data persistence"]}]]