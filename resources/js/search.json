[[{"l":"Overview","p":["Welcome to the official documentation of the Conductive Catalyst SDK \uD83D\uDC4B.","The goal of this document is to provide a brief overview of how to get started with Conductive.ai's SDK."]},{"i":"what-is-catalyst","l":"What is Catalyst?","p":["The core mission of Conductive.ai is to provide game developers with a simple yet effective rewards system that increases player engagement and consequently, user lifetime value (LTV). We do this by providing a simple drop-in SDK with minimal configuration, presenting players with a lucrative engagement framework."]},{"i":"how-does-it-work","l":"How does it work?","p":["At present, we provide a Unity SDK (any native iOS and Android SDK upon request). Integration involves oneline of code, with no changes necessary to your existing code. Players are highly incentivized to perform actions directly correlated with engagement, retention, and monetization increasing your overall LTV over time."]},{"l":"The Role of the Developer","p":["As a developer venturing into the Conductive.ai platform, your role is pivotal in shaping the gaming experience to not only meet but surpass the expectations of the user base. You have the responsibility and the creative freedom to tailor the Conductive.ai functionalities to seamlessly fit into the infrastructure of your game, creating a user journey that aligns with the goals and thematic coherence of your gaming environment.","In this context, you can adopt and integrate various tools and features offered by Conductive.ai, establish a rewards system that is both enticing and fair, and craft a user journey that is intuitive yet engaging. By leveraging the Conductive.ai platform, you can enhance user retention through a carefully strategized reward system, foster a competitive yet enjoyable gaming atmosphere through leaderboards and contests, and ensure the security and transparency of transactions.","Here is an overview of how a developer can use Conductive.ai to improve player lifetime value:"]}],[{"l":"Glossary","p":["1 or more qualifying conditions that make a User eligible for a Reward","A client for the Catalyst platform","A client user references a client user of the game or application","A company or group with one or more Projects","A consumer of a service","A developer may set an expiry for the Rewards offered to Users to motivate actions","A pub-sub consumer","A pub-sub event creator","A reward pool a User may be eligible for based on requirements","A single application or game which has a unique API key","A smaller supporting service, typically at the application level, but not the core level of Conductive.ai’s platorm","A supporting major service within Conductive.ai’s core platform","A test or production blockchain network","A type of transaction related to a Reward, not to be confused with Withdrawal","A Web2 or Web3 reward which incentivizes a user to perform a given action","Admin / Client / Developer","An address / account controlled by a User has outside of Conductive.ai’s platform","An arbitrary ordinal rank of a user based on a game developer’s requirements","An arbitrary Web3 asset on a given test or production blockchain network","An async or synchronous event related to the Catalyst application","An identified User that is verified","An indentifier used to represent a “real” User (a Person)","An on-chain valid transaction on an EVM compatible chain","Balance","Catalyst","Catalyst Event","Chain","Client","Conductive Core","Conductive.ai’s core Web2 and Web3 platform upon which Catalyst sits","Consumer","Contest","Definition","External User ID","External Wallet","Fingerprint","Gas","Gas Fee","Leaderboard","Microservice","Organization","Person","Producer","Project","Reward","Reward Expiration","Reward Group","Reward Transaction","SDK","Service","Term","The accummulation of a Reward earned by a User","The action of off-ramping a Catalyst game asset to an external wallet","The cost per unit of gas required to successfully complete an on-chain transaction; also called the gas price","The developer account within Conductive.ai’s Catalyst platform","The developer’s identifier for a User, enables Conductive.ai to sync identities","The following is a non-exhaustive list of technical terms used by Conductive.ai that may be referenced throughout this document.","The minimum balance of a currency or token a User must have before off-ramping their assets","The rewards application and SDK that is built on top of the Conductive Core platform","The units of a native blockchain token required to successfully complete an on-chain transaction","Token","Transaction","User","Withdrawal","Withdrawal threshold"]}],[{"l":"Getting Started","p":["If you want to integrate CatalystSDK into your Unity game development project, this step-by-step guide will help you install the package into Unity."]},{"l":"SDK Integration","p":["Meeting the requirements","Before starting with Conductive.ai, ensure you satisfy these requirements:","Working with Unity 2020 or a later version","A stable internet connection","A GitHub account for accessing necessary resources","These prerequisites are designed to facilitate a smooth setup process and are vital in successfully integrating the platform’s functionalities into your project, paving the way for enhanced player LTV and engagement."]},{"l":"Installation Guide","p":["You can follow our quick installation guide in our public Github repository, or continue following the instructions below."]},{"l":"API Key","p":["You will first want to acquire an API key by visiting the dashboard https://app.conductive.ai and selecting the settings icon at the bottom, followed by “Settings”.","This should take you to the project settings below. Copy your API key provided for your project."]}],[{"l":"Catalyst Account Setup","p":["Let’s delve deeper into each aspect of creating a rewarding gaming environment that is exhilarating for your users."]},{"l":"Account Setup","p":["Registration on the Conductive.ai platform","Registering on the Conductive.ai platform is your first step towards leveraging a toolkit designed to boost player lifetime value (LTV) and retention. Developers will find straightforward options to sign up, with guidance at each step ensuring a hassle-free registration process. Once registered, developers gain access to a suite of features aimed at incentivizing player engagement through stablecoin rewards.","Project setup and API key retrieval","To initiate your project setup, visit https://app.conductive.ai and log in to obtain your unique API key for integrating Conductive.ai’s toolkit into your system. Do this by clicking the settings icon at the bottom and selecting “Settings”:","This should take you to the project settings below. Copy your API key provided for your project:","The API key acts as a secure bridge between your project and the Conductive.ai platform, facilitating secure data transfers and authorizing access to various functionalities. Safeguard your API key as it is essential to maintain the security and smooth operation of your services on the platform.","Defining the organization and understanding user roles (Admin/Client/Developer)","Understanding the different user roles — Admin, Client, and Developer — is important for managing and navigating the Conductive.ai platform.","The Admin oversees the organizational settings and manages user roles, ensuring that operations run seamlessly.","The Client role is generally reserved for individuals or entities making use of the services, having privileges to set up and manage projects under the guidance of an Admin.","The Developer role is targeted towards individuals responsible for the technical integration and maintenance of projects, having the authority to access and manage API settings and other technical resources.","Defining each role clearly can streamline operations and foster a collaborative, efficient working environment.","Continue to the Unity SDK section."]}],[{"l":"Unity SDK","p":["The Conductive Catalyst SDK is primarily provided to game developers as a Unity SDK. We also support native Android (Kotlin) and iOS (Swift) SDKs upon request.","We’ve made it extremely easy to get started with the SDK. Simply follow the steps below to get started."]},{"l":"SDK Installation"},{"l":"Installation Guide","p":["You can follow our quick installation guide in our public Github repository, or continue following the instructions below."]},{"l":"Requirements","p":["Unity 2020 or later installed on your computer","An internet connection","A GitHub account"]},{"l":"API Key","p":["You will first want to acquire an API key by visiting the dashboard https://app.conductive.ai and selecting the settings icon, followed by “Settings”","This should take you to the project settings below. Copy your API key provided for your project."]},{"l":"Installing the Unity SDK","p":["In Unity, go to Window > Package Manager. You can install the SDK using either the GitHub URL or the ZIP file.","Using GitHub:","Click the ➕ button, then go to Add package from git URL.","Paste https://github.com/conductiveai/catalyst-unity-sdk.git and click Add.","Using the ZIP file:","Go to https://github.com/conductiveai/catalyst-unity-sdk and download the zip file","Unzip the file","Click the ➕ button, then go to Add package from disk.","Select the folder that you unzipped select the package.json file."]},{"l":"Integration in Unity","p":["In the packages list, go to Packages > CatalystSDK > Prefab.","Drag the CatalystSDK.prefab to your project's loading scene or first scene","Fill in the API_KEY field in the CatalystSDK.prefab using the API key you acquired earlier.","Fill in the SceneToShowButton field in the CatalystSDK.prefab with the name of the Unity scene where you want the button to be shown. Pressing this button takes a user to the rewards interface where they can see contest information and their leaderboard rank.","Configure the Canvas and Canvas Scaler on the CatalystSDK.prefab to fit your game's UI. The button and webview for the rewards interface is rendered on this Canvas.","Please open the CatalystSDK.cs script in the CatalystSDK folder. Then, edit this line of code to synchronize player IDs with Catalyst services.","Please refer to this page for more information: Sending Events in Catalyst"]},{"i":"that-s-it","l":"That’s it! \uD83D\uDE80","p":["The Catalyst SDK will automatically capture user login events automatically.","Placing the prefab in the game's first loaded scene or Main Menu ensures user logins are captured when the game starts."]},{"i":"building-for-specific-platforms","l":"Building for specific platforms \uD83D\uDCF1","p":["iOS:","Please include Security.Framework to your project in Xcode before you build. This is requirement to use Keychain services. For more information please check Apple's documentation","Android:","Uniwebiew includes Android libraries that may have a duplicate class with other Android plugins. If you see errors refering to a duplicate class please check Uniwebview's documentation"]}],[{"l":"Sending Events in Catalyst","p":["By default, adding your API_KEY will automatically send a registration event to Catalyst’s backend and record when users have logged into your application.","In order to effectively use the features of Catalyst, it is important to identify your users using CatalystSDK.identify() and label them using your own internal user ID. This will be vital when integrating additional features."]},{"l":"Identify","p":["You can identify a user with your application or game's unique internal ID instead of with Catalyst. If not provided, Catalyst will generate a random but unique identifier. If this method is never called, then unique visitors will be identified by a randomly generated UUID generated the first time they launch your application.","Ideally, you should only capture this once. For example, once a user successfully registers and verifies their email address, you can fire this event once.","If you can’t avoid firing this frequently (like at app cold launch), don't worry — we'll still track the user for you."]},{"l":"Custom Capture","p":["Captures a custom event. This Catalyst function allows you to capture additional events in the game. You do not need to use this to capture daily logins, as we will do this for you.","At a high level, this is useful if you wish to build user funnels and understand the effectiveness of a feature. Parameters are provided if you wish to capture additional metadata about the event.","Suggestions on how to use this:","When a user engages with the feature like PLAY_LEVEL","When a user achieves a result like WIN_LEVEL","Parameters could include the level played, XP earned, etc.","When a user attempts to make a purchase and when the purchase is successful","In general, it is important to capture key events around Monetization and Engagement using the Capture method. The PageView method will help you capture retention metrics/KPIs. This will ultimately be useful for tracking user lifetime value (LTV)."]},{"l":"Alias","p":["Create an alias, which Catalyst will use to link two user IDs going forward (not retroactively). Multiple aliases can map to the same USER_UNIQUE_ID, but not vice-versa.","The context for using this is if your user has multiple identifiers you wish to leverage later for analytics or Catalyst feature purposes. For example, once you’ve used the Identify() method, you might later might capture a user’s Twitter handle. If you wish to track this later, simply provide their unique user ID you used for Identify() as the first parameter, followed by the secondary identifier in the second parameter.","Like Identify(), this only needs to be fired once."]},{"l":"ScreenView","p":["This method is used to track when the user views a specific screen in your game. You can pass additional properties you wish to use later.","Tracking screens is incredibly beneficial as it enables us to monitor both user retention and LTV effectively."]},{"l":"User Synchronization","p":["Please open the CatalystSDK.cs script in the CatalystSDK folder. Then, edit this line of code to synchronize player IDs with Catalyst services.","This method is used to connect a player’s user ID in a game with their Catalyst ID to synchronize data with Conductive’s services. This is a necessary step when creating contests that utilize a Leaderboard. Updating this line of code when a user logs into the game ensures we can synchronize data."]}],[{"l":"Event example"},{"l":"Manually capturing events","p":["Here's an example code snippet that shows how to use the CatalystSDK in your game's code"]}],[{"l":"Mac M1"},{"i":"building-for-ios--xcode","l":"Building for iOS / XCode","p":["If you receive a CocoaPods error such as: ...ruby/2.6.0/gems/ffi-1.15.5/lib/ffi_c.bundle' (mach-o file, but is an incompatible architecture (have 'arm64', need 'x86_64')), This means you have ffi built for arm64 but not x86_64 architecture. Make sure you have Developer Mode enabled on your iOS device: Settings → Privacy → Developer mode → on Then, do the following:","(1) Install llvm:","(2) Uninstall ffi:","(3) If prompted, uninstall ALL versions. install ffi gem for x86_64:","Reference: https://stackoverflow.com/questions/66644365/cocoapods-on-m1-apple-silicon-fails-with-ffi-wrong-architecture"]},{"l":"Issues building for iOS","p":["Be sure to disable bitcode","Be sure to remove Quoted Include in Framework Header to no"]}],[{"l":"How to Set Up Your First Contest"},{"l":"Conductive Button","p":["Use the SceneToShowButton field to set where the Conductive Button appears in your game. We recommend showing the button in a lobby screen or main menu.","The Conductive Button, which will be featured in-game, is part of the CatalystSDK.prefab. Out of the box, it will feature an image, along with a countdown clock that indicates when your active contest will end. The button also supports badges that notify players when a contest ends and if they won a prize for the contest period. If your team has suggestions on notifications that can better inform your players about the contest status or rewards, please get in touch with Conductive.ai. We are constantly making improvements to Conductive Catalyst SDK, and your feedback is valuable.","We understand that resolutions and formats need to be adjusted on a per-game basis, so the button has its own canvas. While properties like resolution and size can be adjusted, we recommend keeping other elements unchanged, as a static button with no countdown might result in lower engagement or a confused player base."]},{"l":"Player Engagement Mechanics","p":["Funding the Master Wallet","Stablecoins Supported:","USDC & USDT (ERC-20)","USDC & USDT (Polygon)","USDT (BNB)","Purpose: These stablecoins can be utilized as rewards."]},{"i":"catalyst-account","l":"Catalyst Account:","p":["Purpose: This account is crucial for processing on-network operations.","Scenario 1: Deposit ETH in preparation for creating a contest on the Ethereum network.","ETH will be used to cover any gas fees associated with transactions such as sending stablecoin rewards directly to players."]},{"i":"buying-eth-on-a-centralized-cryptocurrency-exchange","l":"Buying ETH on a centralized cryptocurrency exchange:","p":["Start by visiting a centralized cryptocurrency exchange, such as Coinbase, and creating an account.","Follow the exchange's step-by-step instructions for buying ETH. Here is Coinbase's walkthrough.","When the purchase is complete, you will see your ETH balance in your Coinbase Wallet Balance."]},{"i":"obtaining-your-catalyst-account-wallet-address","l":"Obtaining your Catalyst Account wallet address:","p":["Visit the Catalyst Dashboard.","In the upper right, click on Fund Project.","Copy your wallet address, which is a string of alphanumeric characters starting with 0x.","Set this wallet address aside. You will need it when you withdraw ETH from your cryptocurrency exchange."]},{"i":"sending-eth-to-your-catalyst-account-master-wallet","l":"Sending ETH to your Catalyst Account Master Wallet:","p":["Sign in to your centralized cryptocurrency exchange of choice. In this example, we'll proceed with the assumption that you are using Coinbase.","Click the Trading tab.","Under Wallet Balance, select Withdraw.","Search for ETH.","Choose the withdrawal method: in the To field, enter your Catalyst Account Master wallet address.","Confirm you're withdrawing ETH into the correct address.","Enter the amount of ETH you'd like to send to your Catalyst Account Master Wallet.","You may need to enter two-step verification before completing the withdrawal.","Note that you will need to reserve a small amount of ETH to pay network fees (also called gas fees) for the withdrawal.","Scenario 2: Deposit MATIC in preparation for creating a contest on the Polygon network.","MATIC will be used to cover any gas fees associated with transactions such as sending stablecoin rewards directly to players."]},{"i":"buying-matic-on-a-centralized-cryptocurrency-exchange","l":"Buying MATIC on a centralized cryptocurrency exchange:","p":["Start by visiting a centralized cryptocurrency exchange, such as Coinbase, and creating an account.","Follow the exchange's step-by-step instructions for buying MATIC. Here is Coinbase's walkthrough.","When the purchase is complete, you will see your MATIC balance in your Coinbase Wallet Balance."]},{"i":"obtaining-your-catalyst-account-wallet-address-1","l":"Obtaining your Catalyst Account wallet address:","p":["Visit the Catalyst Dashboard.","In the upper right, click on Fund Project.","Copy your wallet address, which is a string of alphanumeric characters starting with 0x.","Set this wallet address aside. You will need it when you withdraw MATIC from your cryptocurrency exchange."]},{"i":"sending-matic-to-your-catalyst-account-master-wallet","l":"Sending MATIC to your Catalyst Account Master Wallet:","p":["Sign in to your centralized cryptocurrency exchange of choice. In this example, we'll proceed with the assumption that you are using Coinbase.","Click the Trading tab.","Under Wallet Balance, select Withdraw.","Search for MATIC.","Choose the withdrawal method: in the To field, enter your Catalyst Account Master wallet address.","Confirm you're withdrawing MATIC into the correct address.","Enter the amount of MATIC you'd like to send to your Catalyst Account Master Wallet.","You may need to enter two-step verification before completing the withdrawal.","Note that you will need to reserve a small amount of MATIC to pay network fees (also called gas fees) for the withdrawal.","Creating a Reward Group:","Objective: Set up a reward pool or distribution group for specific players or activities.","Procedure: Send your desired amount of ERC-20 tokens (such as USDC or USDT) to the designated reward group address or through the specified platform interface.","Note: Before transferring any funds, always ensure that you’re using the correct and official addresses or methods to prevent any loss of assets. All gas fees will be paid for by the developer from the Master Wallet."]},{"l":"Setting up and customizing reward groups and rewards","p":["Upon registering on the Conductive.ai platform, it is crucial to set up and personalize your reward groups and the rewards.","This entails defining various reward categories, which include leaderboards and quests.","To create a leaderboard, you will have to set up the ranks and define the prizes that players will receive when they achieve those ranks.","Here’s how to setup a leaderboard:","Give Conductive.ai a leaderboard API endpoint","Speak with a Conductive.ai representative to share the value you want to track that determine ordinal placement.","Tell Conductive.ai how we can retrieve user data from your leaderboard data, and the timestamp","This will allow us to configure your unique leaderboard for Conductive.ai services"]},{"l":"Implementing and managing contests and leaderboards","p":["To foster a competitive spirit and maintain high engagement levels, Conductive.ai offers integrated tools for implementing and managing contests and leaderboards developed by the game developer with ease. Conductive.ai can read a game's leaderboard and extract data to prove winners and give those winners rewards.","Developers have the flexibility to set up periodic contests linked to an in-game leaderboard. These features track player performances and rankings. The management process is iterative, requiring updates based on player feedback. The aim is to ensure fairness and make necessary adjustments over time to sustain a lively and engaging gaming atmosphere."]},{"l":"Catalyst Dashboard","p":["An essential aspect of managing the Conductive.ai platform is understanding the dynamics of reward transactions and establishing reasonable withdrawal thresholds. This involves setting a minimum limit of accumulated rewards that players must reach before initiating a withdrawal. These thresholds can be adjusted at any time.","By having a deep understanding of this, you can maintain a healthy ecosystem where players feel rewarded appropriately while preserving the economic balance of the rewards system. Establishing and communicating these thresholds clearly helps in fostering a transparent and trustful environment, encouraging players to engage more and aim higher in their gaming pursuits.","Create Contests: Set up competitive events to spur engagement and retain players.","Create Reward Groups: Establish groups with specified rewards to encourage certain player behaviors.","Delete Contests: Remove contests that are outdated or irrelevant to maintain a streamlined player experience.","Delete Reward Groups: Withdraw reward groups that are no longer beneficial or pertinent.","Display Contests: Showcase ongoing contests vividly to engage players effectively.","Display Reward Groups: Illustrate reward groups prominently to keep players informed and motivated.","From the Catalyst Dashboard, developers will be able to carry out a wide range of actions to enhance the gaming experience and foster greater player engagement.","Fund Master Wallet: Ensure a seamless reward distribution process by managing financial resources effectively.","Here’s a breakdown of the functionalities available:","Name your reward group (example: Contest #4 Winners!)","Range (i.e: 1–10 = top ten players on leaderboard will split the reward for the contest)","Reward Amount","Set Withdraw Limit: Configure the minimum amount of token rewards a user must accumulate before they can transfer rewards to their wallet.","Through the Conductive.ai dashboard, developers have a centralized hub to manage and optimize the reward systems effectively, encouraging a thriving gaming community centered around continuous engagement and rich rewards. This set of tools is crafted to facilitate not just the creation and management of contests and rewards, but also to visualize and analyze data essential in iterating a successful game development strategy. It is the linchpin in creating a vibrant and responsive gaming ecosystem, enabling a deeper connection between the game and its community.","Understanding reward transactions and withdrawal thresholds","Update Reward Groups: Revise reward groups to keep them fresh, relevant, and aligned with your game’s goals.","Update Scheduled Contests: Modify scheduled contests to adapt to changing dynamics or improve engagement. You cannot modify or update a contest after it has gone live."]}],[{"l":"Player Journey"},{"l":"Player Journey","p":["In building a game integrated with the Conductive.ai platform, understanding the player journey is paramount to achieving a user-centric design that not only entertains but also retains. The following overview of the player journey was crafted to give you, the developer, a meticulous grasp of the paths your users will navigate, helping you shape a gaming experience that is intuitive, rewarding, and deeply engaging.","The player journey illuminates the critical touchpoints where players interact with the various features and rewards incorporated through the Conductive.ai platform. From the initial moments of game interaction, where users install and set up the game, to their engagement with Catalyst Rewards, and finally to understanding and managing transactions within the Conductive.ai ecosystem — every stage should be smooth, straightforward, and coupled with clear guidance.","As developers, you are bestowed with the task of creating a pathway that ensures users not only comprehend the mechanisms at play, including earning and redeeming rewards, but also trust in the security and efficiency of the transaction processes involved. The goal is to foster a gaming landscape where users can immerse themselves in a rich gaming experience, with clear pathways to earn and utilize rewards, all backed by a transparent and secure system.","Here’s an overview of the player journey when a gaming platform integrates Conductive Catalyst SDK:","Let’s walk through the key facets of the player journey to aid in your endeavor of crafting a gaming environment where every player feels valued, engaged, and secure in their interactions and transactions facilitated through the Conductive.ai platform."]},{"l":"1. Game Interaction","p":["Getting started with the game (installing and setting up)","Users who have already downloaded your game don’t need to do anything else. The Conductive Catalyst SDK will be integrated directly into your game.","Understanding the reward system (how to earn and redeem rewards)","An integral part of the Conductive.ai gaming experience is the reward system. Users are given a clear understanding of how they can earn and redeem rewards through easy-to-understand guides and in-game prompts (designed by the developer).","This empowers users to strategize and make the most out of their gaming experience, with a rich rewards system that is both engaging and rewarding. By mastering the rewards dynamics, users can enhance their gaming journey to new, exciting levels."]},{"l":"2. Engagement with Catalyst Rewards","p":["Engaging with leaderboards and contests","Leaderboards and contests are central features in Conductive.ai, allowing players to measure their skills and achievements against others in the gaming community. These platforms are designed for easy engagement, offering a simple and direct way for users to track their standings and participate in various competitions, fostering healthy competition and community engagement.","Players will be able to view their rank on the leaderboard for the active contest at any time by clicking on the Conductive.ai button. Players will be able to see the active contest as well as the total quantity of stablecoin rewards they have earned.","Earning rewards through various actions in the game","Players can earn rewards through a diverse range of actions within the game, a feature that keeps the gaming environment engaging and dynamic. This multifaceted rewards system is built to be intuitive, encouraging players to explore different avenues of earning rewards as they enjoy their gaming experience, adding a layer of incentive to the gameplay.","Stablecoins were chosen for the following reasons:","Pegged 1:1 to a fiat currency, often the US dollar","Listed on all cryptocurrency exchanges","The most efficient remittance instrument","Directly spendable (online purchases, POS)"]},{"l":"3. Blockchain Interactions","p":["Understanding withdrawal thresholds and how to off-ramp assets to an external wallet","It is essential for players to understand the specific thresholds set for withdrawals in the Conductive.ai environment. This involves learning how to efficiently transfer their in-game assets to an external wallet, ensuring they are equipped with the necessary knowledge to manage their earnings securely and successfully.","Being informed about transaction statuses","Conductive.ai provides players with real-time updates on the status of their transactions through notifications or in-game messages. This system ensures that players are always in the loop regarding their asset transfers, providing an additional layer of transparency and trust in the gaming environment. In addition, from the webview after clicking the Conductive Button, players will be able to view their entire transaction history (each withdrawal made since playing the game).","Managing transactions and understanding gas fees in the Conductive.ai ecosystem","When a player chooses to withdraw assets to their personal Web3 wallet, the developer will pay the gas fees for the associated transaction. This will come from the developer’s Master Wallet."]}],[{"l":"Changelog","p":["All notable changes to this project will be documented in this file. It will follow semantic versioning and each sprint should be tagged with a release. Each developer is in charge of updating this doc before the release."]},{"i":"100--2023-05-15","l":"1.0.0 — 2023-05-15"},{"l":"Added","p":["Event tracking","User identification and properties","Data persistence"]}]]